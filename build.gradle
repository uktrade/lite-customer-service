plugins {
  id "java"
  id "application"
  id 'com.github.johnrengelman.shadow' version '1.2.3'
  id "au.com.dius.pact" version "3.2.4"
}

apply plugin: 'idea'
apply plugin: 'maven-publish'

idea {
  module {
    inheritOutputDirs = false
    outputDir = file('build/classes/main')
    testOutputDir = file('build/classes/test')
  }
}

group 'uk.gov.bis.lite'
version '1.1'

mainClassName = "uk.gov.bis.lite.customer.CustomerApplication"

repositories {
  mavenCentral()
  maven {
    name "snapshots"
    url "http://nexus.mgmt.licensing.service.trade.gov.uk.test/repository/maven-snapshots/"
  }
  maven {
    name "releases"
    url "http://nexus.mgmt.licensing.service.trade.gov.uk.test/repository/maven-releases/"
  }
}

dependencies {
  compile 'io.dropwizard:dropwizard-core:1.0.3'
  compile 'uk.gov.bis.lite:spire-client:1.2'
  compile 'ru.vyarus:dropwizard-guicey:3.2.0'
  compile 'io.dropwizard:dropwizard-testing:1.0.3'
  compile 'uk.gov.bis.lite:jersey-correlation-id:1.0'

  testCompile 'io.dropwizard:dropwizard-testing:1.0.3'
  testCompile 'org.assertj:assertj-core:3.4.1'
  testCompile group: 'junit', name: 'junit', version: '4.12'

  testCompile group: 'au.com.dius', name: 'pact-jvm-provider-junit_2.11', version: '3.3.6'
}

task apiJar(type: Jar, dependsOn: compileJava) {
  from sourceSets.main.output.classesDir
  include 'uk/gov/bis/lite/customer/api/**/*'
}

task jarWithSources(type: Jar) {
  from sourceSets.main.allJava
  include 'uk/gov/bis/lite/customer/api/**/*'
}

publishing {
  publications {

    mavenJava(MavenPublication) {
      artifactId 'lite-customer-service-api'
      artifact apiJar
      artifact jarWithSources {
        classifier "sources"
      }
    }
  }
}

publishing {
  repositories {
    maven {
      name "snapshots"
      url "http://nexus.mgmt.licensing.service.trade.gov.uk.test/repository/maven-snapshots/"
    }
    maven {
      name "releases"
      url "http://nexus.mgmt.licensing.service.trade.gov.uk.test/repository/maven-releases/"
    }
  }
}

shadowJar {
  classifier = ''
  mergeServiceFiles()
}

jar {
  manifest {
    attributes 'Main-Class': mainClassName
  }
}

build {
  dependsOn shadowJar
}

pact {

  serviceProviders {

    // You can define as many as you need, but each must have a unique name
    "lite-customer-service" {
      // All the provider properties are optional, and have sensible defaults (shown below)
      protocol = 'http'
      host = 'customer-service.svc.dev.licensing.service.trade.gov.uk.test'
      port = 80
      path = '/'

      // Again, you can define as many consumers for each provider as you need, but each must have a unique name
      hasPactWith('lite-ogel-registration') {

        // currently supports a file path using file() or a URL using url()
        pactFile = file('/Users/Tomacpro/Projects/GitHub/lite-ogel-registration/target/pacts/lite-ogel-registration-lite-customer-service.json')

      }
    }

  }

}

run { args 'server', 'src/main/resources/config.yaml' }

