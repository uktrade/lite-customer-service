plugins {
  id "java"
  id "application"
  id 'com.github.johnrengelman.shadow' version '1.2.3'
}

apply plugin: 'idea'
apply plugin: 'maven-publish'

idea {
  module {
    inheritOutputDirs = false
    outputDir = file('build/classes/main')
    testOutputDir = file('build/classes/test')
  }
}

group 'uk.gov.bis.lite'
version '1.1'

mainClassName = "uk.gov.bis.lite.customer.CustomerApplication"

repositories {
  mavenCentral()
  maven {
    name "snapshots"
    url "http://nexus.mgmt.licensing.service.trade.gov.uk.test/repository/maven-snapshots/"
  }
  maven {
    name "releases"
    url "http://nexus.mgmt.licensing.service.trade.gov.uk.test/repository/maven-releases/"
  }
}

dependencies {
  compile 'io.dropwizard:dropwizard-core:1.0.3'
  compile 'uk.gov.bis.lite:spire-client:1.2'
  compile 'ru.vyarus:dropwizard-guicey:3.2.0'
  compile 'io.dropwizard:dropwizard-testing:1.0.3'
  compile 'uk.gov.bis.lite:jersey-correlation-id:1.0'

  testCompile 'io.dropwizard:dropwizard-testing:1.0.3'
  testCompile 'org.assertj:assertj-core:3.4.1'
  testCompile group: 'junit', name: 'junit', version: '4.12'
}

task apiJar(type: Jar, dependsOn: compileJava) {
  from sourceSets.main.output.classesDir
  include 'uk/gov/bis/lite/customer/api/**/*'
}

task jarWithSources(type: Jar) {
  from sourceSets.main.allJava
  include 'uk/gov/bis/lite/customer/api/**/*'
}

publishing {
  publications {

    mavenJava(MavenPublication) {
      artifactId 'lite-customer-service-api'
      artifact apiJar {
        classifier "api"
      }
      artifact jarWithSources {
        classifier "api-sources"
      }
    }
  }
}

publishing {
  repositories {
    maven {
      name "snapshots"
      url "http://nexus.mgmt.licensing.service.trade.gov.uk.test/repository/maven-snapshots/"
    }
    maven {
      name "releases"
      url "http://nexus.mgmt.licensing.service.trade.gov.uk.test/repository/maven-releases/"
    }
  }
}

shadowJar {
  classifier = ''
  mergeServiceFiles()
}

jar {
  manifest {
    attributes 'Main-Class': mainClassName
  }
}

build {
  dependsOn shadowJar
}

run { args 'server', 'example.yml' }

